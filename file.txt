Default.aspx

<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Default.aspx.cs" MasterPageFile="~/Site.Master" Inherits="DataTableCRUD.Default" %>

<%@ Register Src="EmployeeDetails.ascx" TagPrefix="uc" TagName="EmployeeDetails" %>

<asp:Content runat="server" ID="con" ContentPlaceHolderID="ContentPlaceHolder1">
    <div class="mt-2">
        <uc:EmployeeDetails ID="EmployeeDetails1" runat="server" />
    </div>
    <div class="row mt-2">
        <div class="col-md-12">
            <asp:GridView ID="GridView1" CssClass="table table-responsive" runat="server" AutoGenerateColumns="false">
                <Columns>
                    <asp:BoundField DataField="Id" HeaderText="ID" />
                    <asp:BoundField DataField="Name" HeaderText="Name" />
                    <asp:BoundField DataField="Age" HeaderText="Age" />
                    <asp:BoundField DataField="Gender" HeaderText="Gender" />
                    <asp:BoundField DataField="Profession" HeaderText="Profession" />
                    <asp:BoundField DataField="Languages" HeaderText="Known Languages" />
                    <asp:BoundField DataField="Country" HeaderText="Country" />
                    <asp:TemplateField HeaderText="Edit">
                        <ItemTemplate>
                            <asp:LinkButton ID="lnkEdit" runat="server" Text="Edit" CommandName="Edit" CommandArgument='<%# Eval("Id") %>' />
                        </ItemTemplate>
                    </asp:TemplateField>
                    <asp:TemplateField HeaderText="Delete">
                        <ItemTemplate>
                            <asp:LinkButton ID="lnkDelete" runat="server" Text="Delete" CommandName="Delete" CommandArgument='<%# Eval("Id") %>' />
                        </ItemTemplate>
                    </asp:TemplateField>
                </Columns>
            </asp:GridView>
        </div>
    </div>
</asp:Content>

Default.aspx.cs


using System;
using System.Linq;
using System.Data;
using System.Web.UI.WebControls;
using WebApplication21;

namespace DataTableCRUD
{
    public partial class Default : System.Web.UI.Page
    {
        private DataTable dataTable;

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                CreateDataTable();
                BindGrid();
            }
            this.EmployeeDetails1.bindDataClick += new EventHandler<EmployeeDetailsEventArgs>(this.EmployeeDetails1_SaveClicked);
            this.EmployeeDetails1.EditClicked += new EventHandler<EmployeeDetailsEventArgs>(this.EmployeeDetails1_SaveClicked);
            this.EmployeeDetails1.DeleteClicked += new EventHandler<EmployeeDetailsEventArgs>(this.EmployeeDetails1_SaveClicked);
            

            // Subscribe to the events in the EmployeeDetails control

        }

        private void CreateDataTable()
        {
            if (Session["EmployeeTable"] == null)
            {
                dataTable = new DataTable();
                dataTable.Columns.Add("Id", typeof(int));
                dataTable.Columns.Add("Name", typeof(string));
                dataTable.Columns.Add("Age", typeof(int));
                dataTable.Columns.Add("Gender", typeof(string));
                dataTable.Columns.Add("Profession", typeof(string));
                dataTable.Columns.Add("Languages", typeof(string));
                dataTable.Columns.Add("Country", typeof(string));
                Session["EmployeeTable"] = dataTable;
            }

        }

        public void BindGrid()
        {
            dataTable = (DataTable)Session["EmployeeTable"];
            GridView1.DataSource = dataTable;
            GridView1.DataBind();

        }

        protected void GridView1_RowEditing(object sender, GridViewEditEventArgs e)
        {
            GridView1.EditIndex = e.NewEditIndex;
            BindGrid();
        }
        protected void GridView1_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
        {
            GridView1.EditIndex = -1;
            BindGrid();
        }
        protected void GridView1_RowUpdating(object sender,GridViewUpdateEventArgs e)
        {
            int id = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value);
            GridViewRow row = GridView1.Rows[e.RowIndex];
            string name = ((TextBox)row.FindControl("txtName")).Text;
            int age = Convert.ToInt32(((TextBox)row.FindControl("txtAge")).Text);
            string gender = ((DropDownList)row.FindControl("ddlGender")).SelectedValue;
            string profession = ((TextBox)row.FindControl("txtProfession")).Text;
            string language = ((CheckBoxList)row.FindControl("cblLanguage")).Items.Cast<ListItem>().Where(li=>li.Selected).Selected(li=>il.Text).ToList().Join(",");
            string country = ((DropDownList)row.FindControl("ddlCountry")).SelectedValue;

            dataTable = (DataTable)Session["EmployeeTable"];
            DataRow dataRow = dataTable.Rows.Find(id);
            if (dataRow != null)
            {
                dataRow["Name"] = name;
                dataRow["Age"] = age;
                dataRow["Gender"] = gender;
                dataRow["Profession"] = profession;
                dataRow["Language"] = language;
                dataRow["Country"] = country;
            }
            GridView1.EditIndex = -1; // Exit edit mode
            BindGrid(); // Rebind the GridView

            // Save the changes in the DataTable to the Session
            Session["EmployeeTable"] = dataTable;
        }
        protected void GridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)
        {
            int id = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value);

            dataTable = (DataTable)Session["EmployeeTable"];
            if (dataTable != null)
            {
                for (int i = dataTable.Rows.Count - 1; i >= 0; i--)
                {
                    DataRow dr = dataTable.Rows[i];
                    if (Convert.ToInt32(dr["id"]) == id)
                        dr.Delete();
                }
                dataTable.AcceptChanges();
            }

            GridView1.EditIndex = -1; // Exit edit mode
            BindGrid(); // Rebind the GridView

            // Save the changes in the DataTable to the Session
            Session["EmployeeTable"] = dataTable;
        }



        protected void EmployeeDetails1_SaveClicked(object sender, EmployeeDetailsEventArgs e)
        {
            int id = e.Id;
            string name = e.Name;
            int age = e.Age;
            string gender = e.Gender;
            string profession = e.Profession;
            string language = e.Languages;
            string country = e.Country;
            dataTable = (DataTable)Session["EmployeeTable"];
            if (dataTable == null)
            {
                CreateDataTable();
                dataTable= (DataTable)Session["EmployeeTable"];
            }

            /* if (dataTable != null)
             {*/
            if (id ==0)
            {

                DataRow newRow = dataTable.NewRow();
                newRow["Id"] = dataTable.Rows.Count + 1;
                newRow["Name"] = name;
                newRow["Age"] = age;
                newRow["Gender"] = gender;
                newRow["Profession"] = profession;
                newRow["Languages"] = language;
                newRow["Country"] = country;
                dataTable.Rows.Add(newRow);
                dataTable.AcceptChanges();

            }
            else
            {
                DataRow row = dataTable.Rows.Find(id);
                if (row != null)
                {
                    row["Name"] = name;
                    row["Age"] = age;
                    row["Gender"] = gender;
                    row["Profession"] = profession;
                    row["Languages"] = language;
                    row["Country"] = country;
                }

            }
            Session["EmployeeeTable"] = dataTable;
            ClearForm();
            BindGrid();
        }
        




        protected void ClearForm()
        {
            
        }
    }
}

EmployeeDetails.ascx


<%@ Control Language="C#" AutoEventWireup="true" CodeBehind="EmployeeDetails.ascx.cs" Inherits="WebApplication21.EmployeeDetails" %>



<h2>Add/Edit Employee</h2>
<hr />
<asp:HiddenField ID="hdnId" runat="server" />
<div class="row">
    <div class="col-5">

        <div class="form-inline">
            <div class="form-group">
                <label for="txtName" class="mr-2">Name</label>
                <asp:TextBox ID="txtName" runat="server" CssClass="form-control"></asp:TextBox>
                <asp:RequiredFieldValidator ID="rfvName" runat="server" ControlToValidate="txtName" ErrorMessage="Name is required." />
            </div>
        </div>
        <div class="form-inline">
            <div class="form-group">
                <label for="txtAge" class="mr-2">Age</label>
                <asp:TextBox ID="txtAge" runat="server" Type="number" CssClass="form-control"></asp:TextBox>
                <asp:RequiredFieldValidator ID="RequiredFieldValidator1" runat="server" ControlToValidate="txtAge" ErrorMessage="Age is required." />
                <asp:RequiredFieldValidator ID="rfvAge" runat="server" ControlToValidate="txtAge" />
            </div>
        </div>
        <div class="form-group">
            <label for="txtProfession">Profession</label>
            <asp:TextBox ID="txtProfession" runat="server" CssClass="form-control"></asp:TextBox>
            <asp:RequiredFieldValidator ID="rfvProfession" runat="server" ControlToValidate="txtProfession" ErrorMessage="Profession is required." />
        </div>

        <div class="form-inline">
            <div class="form-group">
                <label for="rblGender">Gender</label>
                <asp:RadioButtonList ID="rblGender" runat="server" ValidationGroup="EmployeeValidation" RepeatDirection="Horizontal">
                    <asp:ListItem Text="Male" Value="Male"></asp:ListItem>
                    <asp:ListItem Text="Female" Value="Female"></asp:ListItem>
                </asp:RadioButtonList>
                <asp:RequiredFieldValidator ID="rfvGender" runat="server" ControlToValidate="rblGender" ErrorMessage="Gender is required." />
            </div>
        </div>

        <div class="form-inline">
            <div class="form-group">
                <label>Known Languages</label>
                <div class="form-check form-check-inline">
                    <asp:CheckBox ID="chkHindi" runat="server" Text="Hindi" ValidationGroup="EmployeeValidation" />
                    <asp:CheckBox ID="chkEnglish" runat="server" Text="English" ValidationGroup="EmployeeValidation" />
                    <asp:CheckBox ID="chkGujarati" runat="server" Text="Gujarati" ValidationGroup="EmployeeValidation" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <label>Country</label>
            <asp:DropDownList CssClass="form-select" ID="ddlCountry" runat="server">
                <asp:ListItem Text="India" Value="India"></asp:ListItem>
                <asp:ListItem Text="Pakistan" Value="Pakistan"></asp:ListItem>
                <asp:ListItem Text="China" Value="China"></asp:ListItem>
                <asp:ListItem Text="Canada" Value="Canada"></asp:ListItem>
            </asp:DropDownList>
        </div>

    </div>
</div>
<asp:Button ID="btnSave" runat="server" Text="Save" OnClick="btnSave_Click" CssClass="mt-4 btn btn-primary" />


EmployeeDetails.ascx.cs


using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;


namespace WebApplication21
{
    public partial class EmployeeDetails : System.Web.UI.UserControl
    {
        private DataTable dataTable;
        public event EventHandler<EmployeeDetailsEventArgs> bindDataClick;
        protected void Page_Load(object sender, EventArgs e)
        {
            dataTable = (DataTable)Session["EmployeeTable"];
            btnSave.Click += btnSave_Click; // Subscribe to btnSave click event
            /*btnEdit.Command += btnEdit_Command;
            btnDelete.Command += btnDelete_Command;*/
        }
        public void ClearForm()
        {
            hdnId.Value = "0";
            txtName.Text = string.Empty;
            txtAge.Text = string.Empty;
            rblGender.ClearSelection();
            txtProfession.Text = string.Empty;
            chkHindi.Checked = false;
            chkEnglish.Checked = false;
            chkGujarati.Checked = false;
            ddlCountry.SelectedIndex = 0;
        }
        protected void btnSave_Click(object sender, EventArgs e)
        {
            if (Page.IsValid)
            {

                int id = hdnId.Value == "" ? 0 : Convert.ToInt32(hdnId.Value);
                string name = txtName.Text;
                int age;
                if(!int.TryParse(txtAge.Text, out age)) 
                {
                    return;
                }
                string gender = rblGender.SelectedValue;
                string profession = txtProfession.Text;

                string languages = "";
                if (chkHindi.Checked)
                    languages += "Hindi,";
                if (chkEnglish.Checked)
                    languages += "English,";
                if (chkGujarati.Checked)
                    languages += "Gujarati,";

                if (!string.IsNullOrEmpty(languages))
                    languages = languages.TrimEnd(',');

                string country = ddlCountry.SelectedValue;


                EmployeeDetailsEventArgs args = new EmployeeDetailsEventArgs(id, name, age, gender, profession, languages, country);
                Session["EmployeeeTable"] = dataTable;
                bindDataClick.Invoke(this, args);
            }
        }
        
        protected void lnkEdit_Command(object sender, CommandEventArgs e)
        {
            int id = Convert.ToInt32(e.CommandArgument);
            EditClicked?.Invoke(this, new EmployeeDetailsEventArgs(id, null, 0, null, null, null, null));
        }
        protected void lnkDelete_Command(object sender, CommandEventArgs e)
        {
            int id = Convert.ToInt32(e.CommandArgument);
            DeleteClicked?.Invoke(this, new EmployeeDetailsEventArgs(id, null, 0, null, null, null, null));
        }
        /*protected void EmployeeDetails1_EditClicked(object sender, EventArgs e)
        {
            
            Button EditButton_Click = (Button)sender;
            int id = Convert.ToInt32(EditButton_Click.CommandArgument);

            dataTable = (DataTable)Session["EmployeeTable"];
            DataRow row = dataTable.Rows.Find(id);

            hdnId.Value = row["Id"].ToString();
            txtName.Text = row["Name"].ToString();
            txtAge.Text = row["Age"].ToString();
            rblGender.SelectedValue = row["Gender"].ToString();
            txtProfession.Text = row["Profession"].ToString();

            string languages = row["Languages"].ToString();
            chkHindi.Checked = languages.Contains("Hindi");
            chkEnglish.Checked = languages.Contains("English");
            chkGujarati.Checked = languages.Contains("Gujarati");

            string country = row["Country"].ToString();
            ddlCountry.SelectedValue = country;

        }
        */
        /* protected void EmployeeDetails1_DeleteClicked(object sender, EventArgs e)
         {
             Button DeleteButton_Click = (Button)sender;
             int id = Convert.ToInt32(DeleteButton_Click.CommandArgument);

             dataTable = (DataTable)Session["EmployeeTable"];
             if (dataTable != null)
             {
                 for (int i = dataTable.Rows.Count - 1; i >= 0; i--)
                 {
                     DataRow dr = dataTable.Rows[i];
                     if (Convert.ToInt32(dr["id"]) == id)
                         dr.Delete();
                 }
                 dataTable.AcceptChanges();
             }

             BindGrid();
        }
        */


        protected virtual void OnSaveClicked(EmployeeDetailsEventArgs e)
        {
            SaveClicked?.Invoke(this, e);

        }
       /* protected void btnEdit_Click(object sender, EventArgs e)
        {
            EmployeeDetails1_EditClicked(sender, e);
        }*/
        
        /*protected void btnDelete_Click(object sender, EventArgs e)
        {
            EmployeeDetails_DeleteClicked(sender, e);
        }
        */
        

        public event EventHandler<EmployeeDetailsEventArgs> SaveClicked;

        public event EventHandler<EmployeeDetailsEventArgs> EditClicked;
        public event EventHandler<EmployeeDetailsEventArgs> DeleteClicked;
    }
    public class EmployeeDetailsEventArgs : EventArgs
    {
        public int Id { get; private set; }
        public string Name { get; private set; }
        public int Age { get; private set; }
        public string Gender { get; private set; }
        public string Profession { get; private set; }
        public string Languages { get; private set; }

        public string Country { get; private set; }
        public EmployeeDetailsEventArgs(int id, string name, int age, string gender, string profession, string languages, string country)
        {
            Id = id;
            Name = name;
            Age = age;
            Gender = gender;
            Profession = profession;
            Country = country;
            Languages = languages;


        }
    }
}

Severity	Code	Description	Project	File	Line	Suppression State
Error	CS1061	'IEnumerable<ListItem>' does not contain a definition for 'Selected' and no accessible extension method 'Selected' accepting a first argument of type 'IEnumerable<ListItem>' could be found (are you missing a using directive or an assembly reference?)	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\Default.aspx.cs	174	Active
Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE1006	Naming rule violation: These words must begin with upper case characters: bindDataClick	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\EmployeeDetails.ascx.cs	15	Active
Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE1006	Naming rule violation: These words must begin with upper case characters: bindDataClick	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\EmployeeDetails.ascx.cs	15	Active
Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE1006	Naming rule violation: These words must begin with upper case characters: btnSave_Click	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\EmployeeDetails.ascx.cs	35	Active
Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE0018	Variable declaration can be inlined	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\EmployeeDetails.ascx.cs	42	Active
Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE1006	Naming rule violation: These words must begin with upper case characters: lnkEdit_Command	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\EmployeeDetails.ascx.cs	70	Active
Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE1006	Naming rule violation: These words must begin with upper case characters: lnkDelete_Command	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\EmployeeDetails.ascx.cs	75	Active

string language = string.Join(",", ((CheckBoxList)row.FindControl("cblLanguage")).Items.Cast<ListItem>().Where(li => li.Selected).Select(li => li.Text).ToList());



The GridView 'GridView1' fired event RowDeleting which wasn't handled.
Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.

Exception Details: System.Web.HttpException: The GridView 'GridView1' fired event RowDeleting which wasn't handled.

Source Error:

An unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below.

Stack Trace:


[HttpException (0x80004005): The GridView 'GridView1' fired event RowDeleting which wasn't handled.]
   System.Web.UI.WebControls.GridView.OnRowDeleting(GridViewDeleteEventArgs e) +373
   System.Web.UI.WebControls.GridView.HandleDelete(GridViewRow row, Int32 rowIndex) +945
   System.Web.UI.WebControls.GridView.HandleEvent(EventArgs e, Boolean causesValidation, String validationGroup) +1415
   System.Web.UI.Control.RaiseBubbleEvent(Object source, EventArgs args) +50
   System.Web.UI.WebControls.GridViewRow.OnBubbleEvent(Object source, EventArgs e) +147
   System.Web.UI.Control.RaiseBubbleEvent(Object source, EventArgs args) +50
   System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint) +5445


System.ArgumentOutOfRangeException
  HResult=0x80131502
  Message=Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
  Source=mscorlib
  StackTrace:
   at System.Collections.ArrayList.get_Item(Int32 index)
   at DataTableCRUD.Default.GridView1_RowDeleting(Object sender, GridViewDeleteEventArgs e) in C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\Default.aspx.cs:line 196


System.ArgumentOutOfRangeException
  HResult=0x80131502
  Message=Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
  Source=mscorlib
  StackTrace:
   at System.Collections.ArrayList.get_Item(Int32 index)
   at DataTableCRUD.Default.GridView1_RowDeleting(Object sender, GridViewDeleteEventArgs e) in C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\Default.aspx.cs:line 196

  This exception was originally thrown at this call stack:
    [External Code]
    DataTableCRUD.Default.GridView1_RowDeleting(object, System.Web.UI.WebControls.GridViewDeleteEventArgs) in Default.aspx.cs
    [External Code]

  This exception was originally thrown at this call stack:
    [External Code]
    DataTableCRUD.Default.GridView1_RowDeleting(object, System.Web.UI.WebControls.GridViewDeleteEventArgs) in Default.aspx.cs
    [External Code]

Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.

Exception Details: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index

Source Error:


Line 194:        protected void GridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)
Line 195:        {
Line 196:            int id = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value);
Line 197:
Line 198:            dataTable = (DataTable)Session["EmployeeTable"];

Source File: C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\Default.aspx.cs    Line: 196

Stack Trace:


[ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index]
   System.Collections.ArrayList.get_Item(Int32 index) +14538231
   System.Web.UI.WebControls.DataKeyArray.get_Item(Int32 index) +18
   DataTableCRUD.Default.GridView1_RowDeleting(Object sender, GridViewDeleteEventArgs e) in C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\Default.aspx.cs:196
   System.Web.UI.WebControls.GridView.HandleDelete(GridViewRow row, Int32 rowIndex) +945
   System.Web.UI.WebControls.GridView.HandleEvent(EventArgs e, Boolean causesValidation, String validationGroup) +1415
   System.Web.UI.Control.RaiseBubbleEvent(Object source, EventArgs args) +50
   System.Web.UI.WebControls.GridViewRow.OnBubbleEvent(Object source, EventArgs e) +147
   System.Web.UI.Control.RaiseBubbleEvent(Object source, EventArgs args) +50
   System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint) +5445

System.Data.DuplicateNameException
  HResult=0x80131922
  Message=A column named 'Id' already belongs to this DataTable.
  Source=<Cannot evaluate the exception source>
  StackTrace:
<Cannot evaluate the exception stack trace>

Parser Error
Description: An error occurred during the parsing of a resource required to service this request. Please review the following specific parse error details and modify your source file appropriately.

Parser Error Message: Could not load type 'DataTableCRUD.login'.

Source Error:


Line 1:  <%@ Page Language="C#" AutoEventWireup="true" CodeBehind="login.aspx.cs" Inherits="DataTableCRUD.login" %>
Line 2:  
Line 3:  <!DOCTYPE html>

Source File: /login.aspx    Line: 1

C:\Windows\Microsoft.NET\Framework\version\Temporary ASP.NET Files

Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE1006	Naming rule violation: These words must begin with upper case characters: btnLogout_Click	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\Default.aspx.cs	174	Active

Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE1006	Naming rule violation: These words must begin with upper case characters: btnLogout_Click	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\Default.aspx.cs	174	Active
Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE1006	Naming rule violation: These words must begin with upper case characters: bindDataClick	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\EmployeeDetails.ascx.cs	15	Active
Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE1006	Naming rule violation: These words must begin with upper case characters: btnSave_Click	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\EmployeeDetails.ascx.cs	34	Active
Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE0018	Variable declaration can be inlined	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\EmployeeDetails.ascx.cs	41	Active
Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE1006	Naming rule violation: These words must begin with upper case characters: login	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\login.aspx.cs	10	Active
Severity	Code	Description	Project	File	Line	Suppression State
Message	IDE1006	Naming rule violation: These words must begin with upper case characters: btnLogin_Click	WebApplication21	C:\Users\A0851291\source\repos\WebApplication21\WebApplication21\login.aspx.cs	20	Active


