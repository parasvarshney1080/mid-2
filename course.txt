using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;

namespace Employee.UI.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class EmployeeController : Controller
    {
        private static List<Employee> employees = new List<Employee>
        {
            new Employee { Id = 1, Name = "John Doe", Age = 30, Profession = "Developer" },
            new Employee { Id = 2, Name = "Jane Doe", Age = 25, Profession = "Designer" }
        };

        // GET: api/Employee
        [HttpGet]
        public IEnumerable<Employee> Get()
        {
            return employees;
        }

        // GET: api/Employee/5
        [HttpGet("{id}", Name = "Get")]
        public Employee Get(int id)
        {
            return employees.FirstOrDefault(e => e.Id == id);
        }

        // POST: api/Employee
        [HttpPost]
        public JsonResult Post([FromBody] Employee employee)
        {
            // For simplicity, we'll just return a message
            employees.Add(employee);
            return Json("Employee added successfully!");
        }

        // PUT: api/Employee/5
        [HttpPut("{id}")]
        public JsonResult Put(int id, [FromBody] Employee employee)
        {
            var existingEmployee = employees.FirstOrDefault(e => e.Id == id);
            if (existingEmployee != null)
            {
                existingEmployee.Name = employee.Name;
                existingEmployee.Age = employee.Age;
                existingEmployee.Profession = employee.Profession;
                return Json("Employee updated successfully!");
            }

            return Json("Employee not found");
        }

        // DELETE: api/Employee/5
        [HttpDelete("{id}")]
        public JsonResult Delete(int id)
        {
            var existingEmployee = employees.FirstOrDefault(e => e.Id == id);
            if (existingEmployee != null)
            {
                employees.Remove(existingEmployee);
                return Json("Employee deleted successfully!");
            }

            return Json("Employee not found");
        }
    }
}
